name: itch.io

on:
  workflow_call:
    inputs:
      itch_target:
        description: "Itch.io target project (username/project)."
        required: true
        type: string
      workflow_run_id:
        description: "Run ID of workflow that generated the artifacts (github.event.workflow_run.id)"
        required: true
        type: string
    secrets:
      DEDICATED_TOKEN:
        description: "Github token with repo permissions."
      BUTLER_CREDENTIALS:
        description: "Itch.io API credentials."

jobs:
  # determine the version number for this workflow.
  get-version:
    runs-on: ubuntu-latest
    steps:
      - name: get version number from tag
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> "${GITHUB_OUTPUT}"
    outputs:
      # use the input from workflow dispatch, or fall back to the git tag.
      version: ${{ inputs.version || steps.tag.outputs.tag }}

  # upload all packages to itch.io.
  upload-to-itch:
    runs-on: ubuntu-latest
    needs:
      - get-version
    env:
      VERSION: ${{ needs.get-version.outputs.version }}
    steps:
      - name: download artifact
        id: download-artifact
        uses: dawidd6/action-download-artifact@v6
        with:
          github_token: ${{ secrets.DEDICATED_TOKEN }}
          run_id: ${{ inputs.workflow_run_id }}
          workflow_conclusion: success
          skip_unpack: false
          if_no_artifact_found: fail
          path: tars

      - name: folders for butler
        run: |
          mkdir upload
          for channel in $(ls tars); do
            if [[ $channel == *-artifacts-build-local-* ]]; then
              mkdir "upload/${channel%%.*}"; mv tars/${channel} "upload/${channel%%.*}"
            fi
          done

      - name: install butler
        run: |
          curl -L -o butler.zip 'https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default'
          unzip butler.zip
          chmod +x butler
          ./butler -V

      - name: upload all packages to itch.io
        env:
          BUTLER_API_KEY: ${{ secrets.BUTLER_CREDENTIALS }}
        run: |
          for channel in $(ls upload); do
            ./butler push \
              --fix-permissions \
              --userversion='${{ env.VERSION }}' \
              upload/"${channel}" \
              '${{ env.ITCH_TARGET }}':"${channel#package-}"
          done
